def tr(start, stop, step):    # these are 3-tuples
    i = 0
    end = [ stop[0], stop[1], stop[2] ]
    timeTu = [ start ]        #it is called timeTu but It is a LIST
    
    #list of tuples bec. the indices are used to add/calculate.  The gen/r yields tuples
      
    while ( timeTu[i][0] < stop[0] ):   #  variable stopping point (hours)
               
        timeTu.append([0, 0, 0]) 
        message = yield (timeTu[i])
        if message != None:
            print(timeTu)
            i = 0
            timeTu = [ start ]   # there is a message, go back to (10, 10, 10 )
            print(timeTu)

else:                    # no message to reset, keep going         
        
            i += 1 
        
            if timeTu[i-1][2] + step[2] >= 60:
                timeTu[i][0] = timeTu[i-1][0]                     # carry over the hours 
                timeTu[i][1] = timeTu[i-1][1] + step[1] + 1       #step[1] +1 to mins
                if timeTu[i][1] >= 60:                            #if sum > 60 mins 
                    timeTu[i][0] = timeTu[i-1][0] + 1             # 1 + hours
                    timeTu[i][1] = timeTu[i][1] % 60
                timeTu[i][2] = ( timeTu[i-1][2] + step[2] ) % 60  # remainder secs to ith 
                timeTu[i] = tuple(timeTu[i])                      # and now it's a tuple :D
                

 else:   # if seconds + 12 < 60
                timeTu[i][2] = timeTu[i-1][2] + step[2]         # just new entry for secs, 
                timeTu[i][1] = timeTu[i-1][1] + step[1]         # new mins entry
                timeTu[i][0] = timeTu[i-1][0]                   # carry over the hours 
                if timeTu[i][1] >= 60:                          # check for limit
                    timeTu[i][0] = timeTu[i-1][0] + 1           # hours + 1  
                    timeTu[i][1] = timeTu[i][1] % 60            # mins % 60
                timeTu[i] = tuple(timeTu[i])                    # and this is a tuple as well
                   
            